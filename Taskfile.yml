version: '3'

vars:
  GOOS: "{{default OS .GOOS}}"
  MVNW: '{{if eq .GOOS "windows"}}mvnw.cmd{{else}}./mvnw{{end}}'
  SLEEP_CMD: '{{if eq .GOOS "windows"}}timeout{{else}}sleep{{end}}'
  IMAGE_NAME: 'surajsh3/restaurant-be'
  DC_FILE: "docker-compose.yml"
  ENV_FILE: ".env"

tasks:
  default:
    cmds:
      - task: test
  test:
    deps: [ format ]
    cmds:
      - "{{.MVNW}} clean verify"

  format:
    cmds:
      - "{{.MVNW}} spotless:apply"

  open_rewrite:
    cmds:
      - "{{.MVNW}} rewrite:run"

  build_image:
    cmds:
      - "{{.MVNW}} clean compile spring-boot:build-image -DskipTests -DdockerImageName={{.IMAGE_NAME}}"

  start:
    deps: [ build_image ]
    cmds:
      - docker compose --profile app -f "{{.DC_FILE}}" up --force-recreate -d

  stop:
    cmds:
      - docker compose --profile app -f "{{.DC_FILE}}" stop
      - docker compose --profile app -f "{{.DC_FILE}}" rm -f

  restart:
    cmds:
      - task: stop
      - task: sleep
      - task: start

  kind_create:
    cmds:
      - ./kind/kind-cluster.sh create

  kind_destroy:
    cmds:
      - ./kind/kind-cluster.sh destroy

  k8s_deploy:
    cmds:
      - kind load docker-image surajsh3/restaurant-be:v2 --name kind
      - envsubst < k8s/app-configmap.template.yaml | kubectl apply -f -
      - kubectl apply -f k8s/

  k8s_undeploy:
    cmds:
      - kubectl delete -f k8s/

  sleep:
    vars:
      DURATION: "{{default 5 .DURATION}}"
    cmds:
      - "{{.SLEEP_CMD}} {{.DURATION}}"